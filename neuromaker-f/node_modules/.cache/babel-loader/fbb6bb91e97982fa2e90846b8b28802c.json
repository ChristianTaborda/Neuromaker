{"ast":null,"code":"var _jsxFileName = \"/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/main.jsx\";\n\n/* Por el momento solo se tiene el login como ejemplo */\nimport React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Producto from './producto';\nimport DetalleProducto from './detalle_ producto';\nimport axios from 'axios';\n/*\nLos componentes con estado deben ser clases\nvea un ejemplo de componente sin estado en el\nfooter o header\n*/\n\nconst listaProductos = arreglo => arreglo.map(indice => React.createElement(Producto, {\n  producto: indice,\n  key: indice.nombre,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}));\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      caso: props.eleccion,\n      productos: [{\n        nombre: ''\n      }]\n    };\n  }\n\n  componentWillMount() {\n    //Axios se encarga de hacer solicitudes de forma sencilla\n    axios.post('http://localhost:4000/producto/traer').then(response => {\n      alert(JSON.stringify.response);\n\n      if (response.data.mensaje === \"Producto encontrado\") {\n        this.setState({\n          productos: response.data.data\n        });\n      }\n    });\n  }\n\n  renderSwitch(param, productos) {\n    switch (param) {\n      case 'detalle':\n        return React.createElement(DetalleProducto, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n\n      default:\n        return listaProductos(productos);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderSwitch(this.eleccion, this.productos)), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/main.jsx"],"names":["React","Header","Footer","Producto","DetalleProducto","axios","listaProductos","arreglo","map","indice","nombre","Main","Component","constructor","props","state","caso","eleccion","productos","componentWillMount","post","then","response","alert","JSON","stringify","data","mensaje","setState","renderSwitch","param","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;;;;;AAOA,MAAMC,cAAc,GAAIC,OAAD,IAErBA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAK,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAGA,MAArB;AAA6B,EAAA,GAAG,EAAEA,MAAM,CAACC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB,CAFF;;AAKA,MAAMC,IAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,IAAI,EAAEF,KAAK,CAACG,QADH;AAETC,MAAAA,SAAS,EAAE,CACT;AACER,QAAAA,MAAM,EAAC;AADT,OADS;AAFF,KAAX;AAQD;;AACDS,EAAAA,kBAAkB,GAAG;AACnB;AACDd,IAAAA,KAAK,CAACe,IAAN,CAAW,sCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAClBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAhB,CAAL;;AACA,UAAGA,QAAQ,CAACI,IAAT,CAAcC,OAAd,KAAwB,qBAA3B,EAAiD;AAC/C,aAAKC,QAAL,CAAc;AAACV,UAAAA,SAAS,EAACI,QAAQ,CAACI,IAAT,CAAcA;AAAzB,SAAd;AACD;AAEF,KAPD;AAQA;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAOZ,SAAP,EAAkB;AAC5B,YAAOY,KAAP;AACE,WAAK,SAAL;AACE,eACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAGF;AACE,eAEIxB,cAAc,CAACY,SAAD,CAFlB;AANJ;AAYD;;AAEDa,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,YAAL,CAAkB,KAAKZ,QAAvB,EAAiC,KAAKC,SAAtC,CADH,CAFJ,EAKG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CADF;AASD;;AAjDiC;;AAsDpC,eAAeP,IAAf","sourcesContent":["/* Por el momento solo se tiene el login como ejemplo */\nimport React from 'react'\nimport Header from './header'\nimport Footer from './footer'\nimport Producto from './producto'\nimport DetalleProducto from './detalle_ producto'\nimport axios from 'axios'\n/*\nLos componentes con estado deben ser clases\nvea un ejemplo de componente sin estado en el\nfooter o header\n*/\n\n\nconst listaProductos = (arreglo) => (\n  \n  arreglo.map(indice => (<Producto producto ={indice} key={indice.nombre}/>))\n);\n\nclass Main  extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      caso: props.eleccion,\n      productos: [\n        {\n          nombre:''\n        }\n      ]\n    }\n  }\n  componentWillMount() {\n    //Axios se encarga de hacer solicitudes de forma sencilla\n   axios.post('http://localhost:4000/producto/traer')\n   .then((response) => {\n     alert(JSON.stringify.response);\n     if(response.data.mensaje===\"Producto encontrado\"){\n       this.setState({productos:response.data.data}) \n     }\n\n   })\n  }\n\n  renderSwitch(param,productos) {\n    switch(param) {\n      case 'detalle':\n        return(\n          <DetalleProducto/>\n        );\n      default:\n        return (\n          \n            listaProductos(productos)\n          \n        );\n    }\n  }\n\n  render(){\n    return(\n      <div>\n          <Header/>\n          <main>\n            {this.renderSwitch(this.eleccion, this.productos)}\n          </main>\n         <Footer/>\n        </div>  \n    );\n  }\n    \n  \n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}