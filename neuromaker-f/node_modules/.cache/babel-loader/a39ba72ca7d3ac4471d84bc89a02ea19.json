{"ast":null,"code":"var _jsxFileName = \"/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/menuEmergenteUsuario.jsx\";\nimport React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.cerrarCesion = this.cerrarCesion.bind(this);\n  }\n\n  cerrarCesion() {\n    localStorage.removeItem(\"token\");\n    this.setState({\n      redirect: true\n    });\n  }\n\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  } //<Route path={`/:topicId`} component={Config}/>\n\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: e => this.dropdownToggle(e),\n        className: \"clienteOpciones\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"NombreUsuario\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Perfil\"), React.createElement(DropdownItem, {\n        onClick: this.cerrarCesion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Cerrar Sesi\\xF3n\"))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/menuEmergenteUsuario.jsx"],"names":["React","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","Redirect","Example","Component","constructor","props","state","isOpen","dropdownToggle","bind","cerrarCesion","localStorage","removeItem","setState","redirect","e","dropdownOpen","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,EAA+DC,MAA/D,QAA6E,YAA7E;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAmB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAnB;AACD;;AACDC,EAAAA,YAAY,GAAG;AACbC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD;;AACDN,EAAAA,cAAc,CAACO,CAAD,EAAI;AAChB,SAAKF,QAAL,CAAc;AACZG,MAAAA,YAAY,EAAE,CAAC,KAAKV,KAAL,CAAWU;AADd,KAAd;AAGD,GAjBkD,CAkBnD;;;AACAC,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWQ,QAAd,EAAuB;AACnB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEK;AACL,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWU,YAA7B;AACE,QAAA,MAAM,EAAED,CAAC,IAAI,KAAKP,cAAL,CAAoBO,CAApB,CADf;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,GAAG,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,EAME,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKL,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CANF,CADF,CAFF;AAiBG;AACJ;;AAzCkD","sourcesContent":["import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom'\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n    }\n    this.dropdownToggle = this.dropdownToggle.bind(this)\n    this.cerrarCesion= this.cerrarCesion.bind(this)\n  }\n  cerrarCesion() {\n    localStorage.removeItem(\"token\")\n    this.setState({redirect: true})\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  //<Route path={`/:topicId`} component={Config}/>\n  render() {\n    if(this.state.redirect){\n        return <Redirect to='/' />\n    }else{\n    return (\n      \n      <div>\n        <Dropdown isOpen={this.state.dropdownOpen}\n          toggle={e => this.dropdownToggle(e)}\n          className=\"clienteOpciones\">\n          <DropdownToggle caret nav>\n            NombreUsuario\n        </DropdownToggle>\n          <DropdownMenu right>\n\n            <DropdownItem >Perfil</DropdownItem>\n            <DropdownItem onClick={this.cerrarCesion}>Cerrar Sesi√≥n</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n\n      </div>\n    );}\n  }\n}"]},"metadata":{},"sourceType":"module"}