{"ast":null,"code":"import _objectSpread from \"/home/Cristian/NeuroMarket/neuromaker-f/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/Cristian/NeuroMarket/neuromaker-f/src/componentes/categorias.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios';\n\nclass Categorias extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.onModifyChange = input => e => {\n      const _this$state = _objectSpread({}, this.state),\n            modificarProducto = _this$state.modificarProducto;\n\n      const currentState = modificarProducto;\n      currentState[input] = e.target.value;\n      this.setState({\n        modificarProducto: currentState\n      });\n    };\n\n    this.state = {\n      categorias: {},\n      nuevaCategoria: \"\",\n      nuevoNombre: \"\",\n      idNuevoNombre: \"\",\n      nuevaSubCategoria: \"\",\n      categorias: [{\n        nombre: \"\"\n      }],\n      newSubTagName: \"\",\n      idNuevoNombreSubCategoria: \"\",\n      subCategorias: [{\n        nombre: \"\"\n      }]\n    };\n    this.getCategorias = this.getCategorias.bind(this);\n    this.crearCategoria = this.crearCategoria.bind(this);\n    this.actualizarCategoria = this.actualizarCategoria.bind(this);\n    this.borrarCategoria = this.borrarCategoria.bind(this);\n    this.getSubCategorias = this.getSubCategorias.bind(this);\n    this.crearSubCategoria = this.crearSubCategoria.bind(this);\n    this.actualizarSubCategoria = this.actualizarSubCategoria.bind(this);\n    this.borrarSubCategoria = this.borrarSubCategoria.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onModifyChange = this.onModifyChange.bind(this);\n  }\n\n  getCategorias() {\n    axios.get('http://localhost:4000/api/categorias').then(response => {\n      //console.log(response.data.data)\n      console.log(response.data.data);\n      this.setState({\n        categorias: response.data.data\n      });\n    });\n  }\n\n  getSubCategorias() {\n    axios.get('http://localhost:4000/api/subcategorias').then(response => {\n      //console.log(response.data.data)\n      console.log(response.data.data);\n      this.setState({\n        subCategorias: response.data.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getCategorias();\n    this.getSubCategorias();\n  }\n  /*\n  shouldComponentUpdate(nextProps, nextState) {\n      if(this.state.categorias != nextState.categorias){\n          console.log(\"Son diferentes\")\n          return true\n      }else{\n          this.getCategorias()\n          return false\n      }\n    }\n  */\n\n\n  crearCategoria() {\n    const mensaje = {\n      nombre: this.state.nuevaCategoria //Axios se encarga de hacer solicitudes de forma sencilla\n\n    };\n    axios.post('http://localhost:4000/api/categorias', mensaje).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getCategorias();\n    });\n  }\n\n  actualizarCategoria() {\n    const mensaje = {\n      id_categoria: this.state.idNuevoNombre,\n      nombre: this.state.nuevoNombre //Axios se encarga de hacer solicitudes de forma sencilla\n\n    };\n    axios.put('http://localhost:4000/api/categorias/update', mensaje).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getCategorias();\n    });\n  }\n\n  borrarCategoria() {\n    const id_categoria = this.state.idNuevoNombre; //Axios se encarga de hacer solicitudes de forma sencilla\n\n    axios.delete('http://localhost:4000/api/categorias/' + id_categoria).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getCategorias();\n    });\n  }\n\n  crearSubCategoria() {\n    const mensaje = {\n      nombre: this.state.nuevaSubCategoria,\n      id_categoria: this.state.idNuevoNombre //Axios se encarga de hacer solicitudes de forma sencilla\n\n    };\n    axios.post('http://localhost:4000/api/subcategorias', mensaje).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getSubCategorias();\n    });\n  }\n\n  actualizarSubCategoria() {\n    const id_subcategoria = this.state.idNuevoNombreSubCategoria;\n    const mensaje = {\n      nombre: this.state.newSubTagName //Axios se encarga de hacer solicitudes de forma sencilla\n\n    };\n    axios.put('http://localhost:4000/api/subcategorias/' + id_subcategoria, mensaje).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getSubCategorias();\n    });\n  }\n\n  borrarSubCategoria() {\n    const id_subcategoria = this.state.idNuevoNombreSubCategoria; //Axios se encarga de hacer solicitudes de forma sencilla\n\n    axios.delete('http://localhost:4000/api/subcategorias/' + id_subcategoria).then(response => {\n      alert(JSON.stringify(response.data));\n      this.getSubCategorias();\n    });\n  }\n\n  onSelect(e) {\n    this.setState({\n      modificarProducto: this.state.categorias[[e.target.value]]\n    });\n  }\n\n  render() {\n    const categorias = this.state.categorias;\n    const subCategorias = this.state.subCategorias; //console.log(categorias)\n\n    return React.createElement(\"div\", {\n      className: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"espacio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Gestion de Categorias\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Crear categoria\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"crearCategoria\",\n      placeholder: \"nombre de la categoria\",\n      onChange: this.onChange('nuevaCategoria'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.crearCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Crear\"), ' '), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Modificar categoria\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.onChange('idNuevoNombre'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, categorias.map((indice, index) => React.createElement(\"option\", {\n      key: index,\n      value: indice.id_categoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, indice.nombre))), React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"modificarCategoria\",\n      onChange: this.onChange('nuevoNombre'),\n      placeholder: \"Nuevo nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.actualizarCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Modificar\"), ' ', React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.borrarCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Eliminar\"), ' ')), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Gestion de Subcategorias\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Crear Subcategoria\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.onChange('idNuevoNombre'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, categorias.map((indice, index) => React.createElement(\"option\", {\n      key: index,\n      value: indice.id_categoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, indice.nombre))), React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"crearCategoria\",\n      placeholder: \"nombre de la subcategoria\",\n      onChange: this.onChange('nuevaSubCategoria'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.crearSubCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Crear\"), ' '), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Modificar subcategoria\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: this.onChange('idNuevoNombreSubCategoria'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, subCategorias.map((indice, index) => React.createElement(\"option\", {\n      key: index,\n      value: indice.id_subcategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, indice.nombre))), React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"modificarCategoria\",\n      placeholder: \"Nuevo nombre\",\n      onChange: this.onChange('newSubTagName'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.actualizarSubCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Modificar\"), ' ', React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.borrarSubCategoria,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Eliminar\"), ' ')));\n  }\n\n}\n\nexport default Categorias;","map":{"version":3,"sources":["/home/Cristian/NeuroMarket/neuromaker-f/src/componentes/categorias.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","axios","Categorias","constructor","props","onChange","input","e","setState","target","value","onModifyChange","state","modificarProducto","currentState","categorias","nuevaCategoria","nuevoNombre","idNuevoNombre","nuevaSubCategoria","nombre","newSubTagName","idNuevoNombreSubCategoria","subCategorias","getCategorias","bind","crearCategoria","actualizarCategoria","borrarCategoria","getSubCategorias","crearSubCategoria","actualizarSubCategoria","borrarSubCategoria","onSelect","get","then","response","console","log","data","componentDidMount","mensaje","post","alert","JSON","stringify","id_categoria","put","delete","id_subcategoria","render","map","indice","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport axios from 'axios'\n\nclass Categorias extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            categorias: {},\n            nuevaCategoria: \"\",\n            nuevoNombre: \"\",\n            idNuevoNombre: \"\", \n            nuevaSubCategoria: \"\",\n            categorias: [\n                {\n                    nombre: \"\"\n                }\n            ],\n            newSubTagName: \"\",\n            idNuevoNombreSubCategoria: \"\",\n            subCategorias: [\n                {\n                    nombre: \"\"\n                }\n            ]\n        }\n        this.getCategorias = this.getCategorias.bind(this)\n        this.crearCategoria = this.crearCategoria.bind(this)\n        this.actualizarCategoria = this.actualizarCategoria.bind(this)\n        this.borrarCategoria = this.borrarCategoria.bind(this)\n        this.getSubCategorias = this.getSubCategorias.bind(this)\n        this.crearSubCategoria = this.crearSubCategoria.bind(this)\n        this.actualizarSubCategoria = this.actualizarSubCategoria.bind(this)\n        this.borrarSubCategoria = this.borrarSubCategoria.bind(this)\n        this.onChange = this.onChange.bind(this) \n        this.onSelect = this.onSelect.bind(this)\n        this.onModifyChange = this.onModifyChange.bind(this)\n\n    }\n\n    \n    getCategorias(){\n        axios.get('http://localhost:4000/api/categorias')\n        .then((response) => {\n            //console.log(response.data.data)\n            console.log(response.data.data)\n            this.setState({\n                categorias: response.data.data\n            })\n        })\n    }\n\n    getSubCategorias(){\n        axios.get('http://localhost:4000/api/subcategorias')\n        .then((response) => {\n            //console.log(response.data.data)\n            console.log(response.data.data)\n            this.setState({\n                subCategorias: response.data.data\n            })\n        })\n    }\n\n\n    componentDidMount(){\n        this.getCategorias()\n        this.getSubCategorias()\n    }\n\n    /*\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state.categorias != nextState.categorias){\n            console.log(\"Son diferentes\")\n            return true\n        }else{\n            this.getCategorias()\n            return false\n        }\n      }\n*/\n\n    crearCategoria() {\n        const mensaje = {\n            nombre: this.state.nuevaCategoria,\n        }\n        \n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.post('http://localhost:4000/api/categorias', mensaje)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getCategorias()\n        })\n    }\n\n    actualizarCategoria() {\n        const mensaje = {\n            id_categoria: this.state.idNuevoNombre,\n            nombre: this.state.nuevoNombre\n        }\n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.put('http://localhost:4000/api/categorias/update', mensaje)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getCategorias()\n        })\n        \n    }\n\n    borrarCategoria(){\n        const id_categoria = this.state.idNuevoNombre;\n        \n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.delete('http://localhost:4000/api/categorias/' + id_categoria)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getCategorias()\n        })\n    }\n\n    crearSubCategoria() {\n        const mensaje = {\n            nombre: this.state.nuevaSubCategoria,\n            id_categoria: this.state.idNuevoNombre\n        }\n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.post('http://localhost:4000/api/subcategorias', mensaje)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getSubCategorias()\n        })\n    }\n\n    actualizarSubCategoria() {\n        const id_subcategoria =  this.state.idNuevoNombreSubCategoria;\n        const mensaje = {\n            nombre: this.state.newSubTagName\n        }\n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.put('http://localhost:4000/api/subcategorias/' + id_subcategoria, mensaje)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getSubCategorias()\n        })        \n    }\n\n    borrarSubCategoria(){\n        const id_subcategoria = this.state.idNuevoNombreSubCategoria;\n        //Axios se encarga de hacer solicitudes de forma sencilla\n        axios.delete('http://localhost:4000/api/subcategorias/' + id_subcategoria)\n            .then((response) => {\n                alert(JSON.stringify(response.data))\n                this.getSubCategorias()\n        })\n    }\n\n    onChange = input => e =>{ \n        this.setState({ [input]: e.target.value});\n    } \n\n    onModifyChange = input => e =>{ \n        const { modificarProducto } = {...this.state};\n        const currentState = modificarProducto;\n        currentState[input] = e.target.value\n        this.setState({\n            modificarProducto: currentState    \n        });\n    }\n\n    onSelect(e) {         \n        this.setState({modificarProducto: this.state.categorias[[e.target.value]]})\n    }   \n    \n    render() {\n        const categorias = this.state.categorias;\n        const subCategorias = this.state.subCategorias;\n        //console.log(categorias)\n        return (\n            <div className=\"categorias\">\n                <div id=\"espacio\" />\n                <h2>Gestion de Categorias</h2>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Crear categoria</Label>\n                        <Input type=\"text\" name=\"email\" id=\"crearCategoria\" \n                        placeholder=\"nombre de la categoria\" \n                        onChange = {this.onChange('nuevaCategoria')}/>\n                        <Button color=\"primary\" onClick={this.crearCategoria}>Crear</Button>{' '}\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Modificar categoria</Label>\n                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\"\n                        onChange={this.onChange('idNuevoNombre')}>\n                        {categorias.map((indice, index) => \n                        <option key={index} \n                        value={indice.id_categoria}>{indice.nombre}</option>)}\n                        </Input>\n                        <Input type=\"text\" name=\"email\" id=\"modificarCategoria\" \n                        onChange={this.onChange('nuevoNombre')}placeholder=\"Nuevo nombre\" />\n                        <Button color=\"primary\" onClick={this.actualizarCategoria}>Modificar</Button>{' '}\n                        <Button color=\"danger\" onClick={this.borrarCategoria}>Eliminar</Button>{' '}\n                    </FormGroup>\n\n                </Form>\n                <br />\n                <h2>Gestion de Subcategorias</h2>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Crear Subcategoria</Label>\n                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\"\n                        onChange={this.onChange('idNuevoNombre')}>\n                        {categorias.map((indice, index) => \n                        <option key={index} \n                        value={indice.id_categoria}>{indice.nombre}</option>)}\n                        </Input>\n                        <Input type=\"text\" name=\"email\" id=\"crearCategoria\" \n                        placeholder=\"nombre de la subcategoria\" \n                        onChange = {this.onChange('nuevaSubCategoria')}/>\n                        <Button color=\"primary\" onClick={this.crearSubCategoria} >Crear</Button>{' '}\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Modificar subcategoria</Label>\n                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\"\n                        onChange={this.onChange('idNuevoNombreSubCategoria')}>\n                        {subCategorias.map((indice, index) => \n                        <option key={index} \n                        value={indice.id_subcategoria}>{indice.nombre}</option>)}\n                        </Input>\n                        <Input type=\"text\" name=\"email\" id=\"modificarCategoria\" \n                        placeholder=\"Nuevo nombre\" \n                        onChange = {this.onChange('newSubTagName')}/>\n                        <Button color=\"primary\" onClick={this.actualizarSubCategoria}>Modificar</Button>{' '}\n                        <Button color=\"danger\" onClick={this.borrarSubCategoria}>Eliminar</Button>{' '}\n\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Categorias;"]},"metadata":{},"sourceType":"module"}