{"ast":null,"code":"import Usuario from '../modelos/usuario';\nexport async function crearUsuario(req, res) {\n  const _req$body = req.body,\n        username = _req$body.username,\n        passwd = _req$body.passwd,\n        primer_nombre = _req$body.primer_nombre,\n        segundo_nombre = _req$body.segundo_nombre,\n        primer_apellido = _req$body.primer_apellido,\n        segundo_apellido = _req$body.segundo_apellido,\n        direccion_residencia = _req$body.direccion_residencia,\n        pais = _req$body.pais,\n        telefono = _req$body.telefono,\n        estado = _req$body.estado,\n        codigo_de_descuento = _req$body.codigo_de_descuento,\n        vendedor = _req$body.vendedor;\n\n  try {\n    let newUsuario = await Usuario.create({\n      username,\n      passwd,\n      primer_nombre,\n      segundo_nombre,\n      primer_apellido,\n      segundo_apellido,\n      direccion_residencia,\n      pais,\n      telefono,\n      estado,\n      codigo_de_descuento,\n      vendedor\n    }, {\n      fields: ['username', 'passwd', 'primer_nombre', 'segundo_nombre', 'primer_apellido', 'segundo_apellido', 'direccion_residencia', 'pais', 'telefono', 'estado', 'codigo_de_descuento', 'vendedor']\n    });\n\n    if (newUsuario) {\n      return res.json({\n        mensaje: 'Usuario creado exitosamente',\n        datos: newUsuario\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      mensaje: 'no se pudo crear usuario',\n      data: {}\n    });\n  }\n\n  res.send('recibido');\n}\nexport async function loginUsuario(req, res) {\n  const _req$body2 = req.body,\n        username = _req$body2.username,\n        passwd = _req$body2.passwd;\n\n  try {\n    const busquedaUsuario = await Usuario.findOne({\n      attributes: ['username', 'passwd'],\n      where: {\n        username: username,\n        passwd: passwd\n      }\n    });\n\n    if (busquedaUsuario) {\n      return res.json({\n        mensaje: 'Usuario encontrado',\n        data: busquedaUsuario\n      });\n    } else {\n      return res.json({\n        mensaje: 'Usuario no encontrado',\n        data: {}\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["/home/Cristian/NeuroMarket/neuromarket-f/src/controladores/dao.usario.js"],"names":["Usuario","crearUsuario","req","res","body","username","passwd","primer_nombre","segundo_nombre","primer_apellido","segundo_apellido","direccion_residencia","pais","telefono","estado","codigo_de_descuento","vendedor","newUsuario","create","fields","json","mensaje","datos","error","console","log","status","data","send","loginUsuario","busquedaUsuario","findOne","attributes","where"],"mappings":"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","sourcesContent":["import Usuario from '../modelos/usuario';\r\n\r\nexport async function crearUsuario(req,res){\r\n    const { username,passwd,primer_nombre,segundo_nombre,primer_apellido,segundo_apellido,direccion_residencia,pais,telefono,estado,codigo_de_descuento,vendedor }=req.body;\r\n    try {\r\n        let newUsuario= await Usuario.create({\r\n            username,\r\n            passwd,\r\n            primer_nombre,\r\n            segundo_nombre,\r\n            primer_apellido,\r\n            segundo_apellido,\r\n            direccion_residencia,\r\n            pais,\r\n            telefono,\r\n            estado,\r\n            codigo_de_descuento,\r\n            vendedor\r\n        },{\r\n            fields: ['username','passwd','primer_nombre','segundo_nombre','primer_apellido','segundo_apellido','direccion_residencia','pais','telefono','estado','codigo_de_descuento','vendedor']\r\n        });\r\n        if(newUsuario){\r\n            return res.json({\r\n                mensaje: 'Usuario creado exitosamente',\r\n                datos: newUsuario\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        res.status(500).json({\r\n            mensaje: 'no se pudo crear usuario',\r\n            data: {}\r\n        });\r\n    }\r\n    res.send('recibido');\r\n}\r\n\r\nexport async function loginUsuario(req,res){\r\n    const { username, passwd}= req.body;\r\n    try {\r\n        const busquedaUsuario= await Usuario.findOne({\r\n            attributes: ['username','passwd'],\r\n            where: {\r\n                username: username,\r\n                passwd: passwd\r\n            }\r\n        });\r\n        if(busquedaUsuario){\r\n            return res.json({\r\n                mensaje: 'Usuario encontrado',\r\n                data: busquedaUsuario\r\n            })\r\n        }else{\r\n            return res.json({\r\n                mensaje: 'Usuario no encontrado',\r\n                data: {}\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}