{"ast":null,"code":"var _jsxFileName = \"/home/Cristian/NeuroMarket/neuromarket-f/src/componentes/loginClient.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport '../estilos/loginClient.css';\n\nclass LoginClient extends Component {\n  constructor(props) {\n    super(props); //console.log(props)\n\n    this.handleOnchange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      contrasena: \"\"\n    };\n    this.handleOnchange = this.handleOnchange.bind(this);\n    this.enviarSolicitud = this.enviarSolicitud.bind(this);\n    this.enviar = this.enviar.bind(this);\n  }\n\n  enviarSolicitud() {\n    const mensaje = {\n      username: this.state.username,\n      contrasena: this.state.contrasena //Axios se encarga de hacer solicitudes de forma sencilla\n\n    };\n    axios.post('http://localhost:4000/usuario/login', mensaje).then(response => {\n      alert(JSON.stringify(response.data));\n      console.log(response.data);\n    });\n  }\n\n  enviar() {\n    /*\n        let esConductor = (JSON.parse(this.state.conductor));\n        if(this.state.identificador.match(\"^[0-9]+$\")!=null){\n          if(this.state.contrasena !== \"\"){\n            const input = {\n              identificador: this.state.identificador, \n              contrasena: this.state.contrasena,\n              conductor: false\n            };\n            let url = \"http://\"+ this.props.url +\":4000/login\";\n            if(esConductor){\n              input.conductor = true;\n            }\n            const opciones = {\n              method: 'POST',  \n              body: JSON.stringify(input),  \n              headers:{\n                'Content-Type': 'application/json'\n              }\n            };\n            const request = new Request(url, opciones);\n            this.setState({closedProgress: false})\n            fetch(request).then(res => res.json())\n            .then((response) => {\n    \n              this.setState({closedProgress: true})\n              console.log('Exito:', JSON.stringify(response))\n    \n              if (response.identificador) {\n                if(response.contrasena){\n                  if(esConductor){\n                    if(response.ocupado){\n                      handleClick({message: \"El taxi esta siendo usado!!\"})\n                    }else{\n                      this.props.iniciarSesion({valor: esConductor, nombre: response.nombre, id:response.id, placa: response.placa});\n                    }\n                  }else{\n                    if(response.ocupado){\n                      handleClick({message: \"La sesion ya esta iniciada\"})\n                    }else{\n                      this.props.iniciarSesion({valor: esConductor, nombre: response.nombre, id:response.id});\n                    }\n                  }            \n                }else{\n                  handleClick({message: \"Contraseña incorrecta\"})\n                }\n              }else{\n                handleClick({message: (esConductor)?\n                                      \"El Conductor no esta registrado\":\n                                      \"El Pasajero no esta registrado\"\n                                    })\n              }\n            }\n            )\n            .catch(error => {\n              console.log('Error:', error)\n              this.setState({closedProgress: true})\n              handleClick({message: \"Error de red, intentelo mas tarde\"})\n              });\n    \n          }else{\n            handleClick({message: \"La contraseña esta vacia\"})\n          }\n        }else{\n          handleClick({message: (esConductor)?\n                      \"El número de CEDULA es invalido\":\n                      \"El número de CELULAR es invalido\"\n                      })\n        } \n        */\n  }\n\n  render() {\n    if (this.props.autenticado) {\n      console.log(\"Esta logeado\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"espacio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Bloque\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"formularioLogin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Iniciar Sesi\\xF3n\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleOnchange('username'),\n      placeholder: \"Usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleOnchange('contrasena'),\n      placeholder: \"contrasena\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"danger\",\n      block: true,\n      onClick: this.enviarSolicitud,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"INGRESAR\"), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"mensajito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\xBFAun sin cuenta? \", React.createElement(Link, {\n      to: \"/registro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"registrare aqui\")))));\n  }\n\n}\n\nexport default LoginClient;","map":{"version":3,"sources":["/home/Cristian/NeuroMarket/neuromarket-f/src/componentes/loginClient.jsx"],"names":["React","Component","Link","axios","Button","FormGroup","Input","LoginClient","constructor","props","handleOnchange","input","e","setState","target","value","state","username","contrasena","bind","enviarSolicitud","enviar","mensaje","post","then","response","alert","JSON","stringify","data","console","log","render","autenticado"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport '../estilos/loginClient.css'\n\nclass LoginClient extends Component {\n    constructor(props) {\n        super(props);\n        //console.log(props)\n        this.state = {\n            username: \"\",\n            contrasena: \"\",\n        };\n        this.handleOnchange = this.handleOnchange.bind(this);\n        this.enviarSolicitud = this.enviarSolicitud.bind(this)\n        this.enviar = this.enviar.bind(this);\n\n    }\n\n\n    handleOnchange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    enviarSolicitud() {\n      const mensaje = {\n        username: this.state.username,\n        contrasena: this.state.contrasena\n        \n      }\n      \n      //Axios se encarga de hacer solicitudes de forma sencilla\n      axios.post('http://localhost:4000/usuario/login', mensaje)\n      .then((response) => {\n        alert(JSON.stringify(response.data))\n        console.log(response.data)\n      })\n    }\n\n    \n    enviar() {\n        /*\n            let esConductor = (JSON.parse(this.state.conductor));\n            if(this.state.identificador.match(\"^[0-9]+$\")!=null){\n              if(this.state.contrasena !== \"\"){\n                const input = {\n                  identificador: this.state.identificador, \n                  contrasena: this.state.contrasena,\n                  conductor: false\n                };\n                let url = \"http://\"+ this.props.url +\":4000/login\";\n                if(esConductor){\n                  input.conductor = true;\n                }\n                const opciones = {\n                  method: 'POST',  \n                  body: JSON.stringify(input),  \n                  headers:{\n                    'Content-Type': 'application/json'\n                  }\n                };\n                const request = new Request(url, opciones);\n                this.setState({closedProgress: false})\n                fetch(request).then(res => res.json())\n                .then((response) => {\n        \n                  this.setState({closedProgress: true})\n                  console.log('Exito:', JSON.stringify(response))\n        \n                  if (response.identificador) {\n                    if(response.contrasena){\n                      if(esConductor){\n                        if(response.ocupado){\n                          handleClick({message: \"El taxi esta siendo usado!!\"})\n                        }else{\n                          this.props.iniciarSesion({valor: esConductor, nombre: response.nombre, id:response.id, placa: response.placa});\n                        }\n                      }else{\n                        if(response.ocupado){\n                          handleClick({message: \"La sesion ya esta iniciada\"})\n                        }else{\n                          this.props.iniciarSesion({valor: esConductor, nombre: response.nombre, id:response.id});\n                        }\n                      }            \n                    }else{\n                      handleClick({message: \"Contraseña incorrecta\"})\n                    }\n                  }else{\n                    handleClick({message: (esConductor)?\n                                          \"El Conductor no esta registrado\":\n                                          \"El Pasajero no esta registrado\"\n                                        })\n                  }\n                }\n                )\n                .catch(error => {\n                  console.log('Error:', error)\n                  this.setState({closedProgress: true})\n                  handleClick({message: \"Error de red, intentelo mas tarde\"})\n                  });\n        \n              }else{\n                handleClick({message: \"La contraseña esta vacia\"})\n              }\n            }else{\n              handleClick({message: (esConductor)?\n                          \"El número de CEDULA es invalido\":\n                          \"El número de CELULAR es invalido\"\n                          })\n            } \n            */\n    }\n\n    render() {\n        if (this.props.autenticado) {\n            console.log(\"Esta logeado\")\n\n        }\n        return (\n            <div>\n                <div id=\"espacio\" />\n                <div className=\"Bloque\">\n                    <div className=\"card-heading\">\n                        {/*<div id=\"mundo\" />\n                        <div id=\"taxi\" />*/}\n                    </div>\n                    <div id=\"formularioLogin\">\n                        <h2>Iniciar Sesión</h2>\n                        <br />\n                        <FormGroup>\n                        <i className=\"fa fa-user\"></i>\n                            <Input type=\"email\" name=\"email\"\n                                onChange={this.handleOnchange('username')}\n                                placeholder=\"Usuario\" \n                                />\n\n                        </FormGroup>\n                        <br />\n                        <FormGroup>\n                        <i className=\"fa fa-lock\"></i>\n                            <Input type=\"password\" name=\"password\"\n                                onChange={this.handleOnchange('contrasena')}\n                                placeholder=\"contrasena\" />\n\n                        </FormGroup>\n                        <br />\n                        <Button color=\"danger\" block onClick={this.enviarSolicitud}>INGRESAR</Button>{' '}\n\n                        <br /><br />\n                        <span className=\"mensajito\">¿Aun sin cuenta? <Link to={\"/registro\"} >registrare aqui</Link></span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginClient;"]},"metadata":{},"sourceType":"module"}