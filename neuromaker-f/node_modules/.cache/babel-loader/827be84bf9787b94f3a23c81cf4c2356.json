{"ast":null,"code":"var _jsxFileName = \"/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/main.jsx\";\n\n/* Por el momento solo se tiene el login como ejemplo */\nimport React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Producto from './producto';\nimport DetalleProducto from './detalle_ producto';\nimport axios from 'axios';\nimport { Spinner } from 'reactstrap';\nimport { Route } from 'react-router-dom';\n/*\nLos componentes con estado deben ser clases\nvea un ejemplo de componente sin estado en el\nfooter o header\n*/\n\nconst listaProductos = arreglo => arreglo.map(indice => React.createElement(Producto, {\n  producto: indice,\n  key: indice.nombre,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\n\nconst listaRutas = arreglo => arreglo.map(indice => React.createElement(Route, {\n  to: \"\".concat(indice.costo),\n  key: indice.costo,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}));\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cargando: true,\n      productos: [{\n        nombre: ''\n      }]\n    };\n  }\n\n  componentWillMount() {\n    //Axios se encarga de hacer solicitudes de forma sencilla\n    axios.post('http://localhost:4000/producto/traer').then(response => {\n      if (response.data.mensaje === \"Producto encontrado\") {\n        const rutas = {\n          productos: response.data.data,\n          componente: DetalleProducto\n        };\n        this.setState({\n          productos: rutas\n        });\n        this.setState({\n          cargando: false\n        });\n        console.log(this.state.productos);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.cargando) {\n      return (//Falta centrarlo\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(Spinner, {\n          type: \"grow\",\n          color: \"dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }))\n      );\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, listaProductos(this.state.productos), listaRutas(this.state.productos)), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/Cristian/NeuroMaker/neuromaker-f/src/componentes/main.jsx"],"names":["React","Header","Footer","Producto","DetalleProducto","axios","Spinner","Route","listaProductos","arreglo","map","indice","nombre","listaRutas","costo","Main","Component","constructor","props","state","cargando","productos","componentWillMount","post","then","response","data","mensaje","rutas","componente","setState","console","log","render"],"mappings":"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","sourcesContent":["/* Por el momento solo se tiene el login como ejemplo */\nimport React from 'react'\nimport Header from './header'\nimport Footer from './footer'\nimport Producto from './producto'\nimport DetalleProducto from './detalle_ producto'\nimport axios from 'axios'\nimport { Spinner } from 'reactstrap';\nimport {Route} from 'react-router-dom'\n\n/*\nLos componentes con estado deben ser clases\nvea un ejemplo de componente sin estado en el\nfooter o header\n*/\n\n\nconst listaProductos = (arreglo) => (\n  arreglo.map(indice => (\n  <Producto producto ={indice} key={indice.nombre}/>\n\n  ))\n  );\nconst listaRutas = (arreglo) => (\n  arreglo.map(indice =>(<Route to={`${indice.costo}`} key={indice.costo}\n  />))\n);\n\n\nclass Main  extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      cargando: true,\n      productos: [\n        {\n          nombre:''\n        }\n      ]\n    }\n  }\n  componentWillMount() {\n    \n    //Axios se encarga de hacer solicitudes de forma sencilla\n   axios.post('http://localhost:4000/producto/traer')\n   .then((response) => {\n     \n   \n     if(response.data.mensaje===\"Producto encontrado\"){\n      const rutas ={\n        productos: response.data.data,\n        componente: DetalleProducto\n      }\n       this.setState({productos:rutas}) \n       this.setState({cargando:false})\n       console.log(this.state.productos);\n     }\n\n   })\n  }\n\n\n  render(){\n    if(this.state.cargando){\n      return (\n        //Falta centrarlo\n        <div>\n          \n      {/*<Spinner style={{ position: 'relative', right: '40px', top: '50px' }} type=\"grow\" color=\"primary\" />*/}\n          <Spinner type=\"grow\" color=\"secondary\" />\n          <Spinner type=\"grow\" color=\"success\" />\n          <Spinner type=\"grow\" color=\"danger\" />\n          <Spinner type=\"grow\" color=\"warning\" />\n          <Spinner type=\"grow\" color=\"info\" />\n          <Spinner type=\"grow\" color=\"light\" />\n          <Spinner type=\"grow\" color=\"dark\" />\n         \n        </div>\n      );\n    }else{\n      return(\n      \n        <div>\n            <Header/>\n            <main>\n              { listaProductos(this.state.productos)}\n              {listaRutas(this.state.productos)}\n            </main>\n          <Footer/>\n          </div>  \n      );\n    }\n  }\n    \n  \n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}