{"ast":null,"code":"var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nvar config = {\n  defaultStarCount: 5,\n  gold: \"#ffb400\",\n  charcoal: \"#333\"\n};\nvar RatingComponent = (_temp = _class = function (_Component) {\n  _inherits(RatingComponent, _Component);\n\n  function RatingComponent(props) {\n    _classCallCheck(this, RatingComponent);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this));\n\n    var value = props.value;\n    _this.state = {\n      value: value\n    };\n    return _this;\n  }\n\n  RatingComponent.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var value = props.value;\n\n    if (value != null && value !== state.value) {\n      return {\n        value: value\n      };\n    }\n\n    return null;\n  };\n\n  RatingComponent.prototype.onChange = function onChange(inputValue) {\n    var _props = this.props,\n        editing = _props.editing,\n        value = _props.value;\n    if (!editing) return;\n    if (value != null) return;\n    this.setState({\n      value: inputValue\n    });\n  };\n\n  RatingComponent.prototype.onStarClick = function onStarClick(index, value, name, e) {\n    e.stopPropagation();\n    var _props2 = this.props,\n        onStarClick = _props2.onStarClick,\n        editing = _props2.editing;\n    if (!editing) return;\n    onStarClick && onStarClick(index, value, name, e);\n  };\n\n  RatingComponent.prototype.onStarHover = function onStarHover(index, value, name, e) {\n    e.stopPropagation();\n    var _props3 = this.props,\n        onStarHover = _props3.onStarHover,\n        editing = _props3.editing;\n    if (!editing) return;\n    onStarHover && onStarHover(index, value, name, e);\n  };\n\n  RatingComponent.prototype.onStarHoverOut = function onStarHoverOut(index, value, name, e) {\n    e.stopPropagation();\n    var _props4 = this.props,\n        onStarHoverOut = _props4.onStarHoverOut,\n        editing = _props4.editing;\n    if (!editing) return;\n    onStarHoverOut && onStarHoverOut(index, value, name, e);\n  };\n\n  RatingComponent.prototype.renderStars = function renderStars() {\n    var _this2 = this;\n\n    var _props5 = this.props,\n        name = _props5.name,\n        starCount = _props5.starCount;\n    var value = this.state.value;\n    var stars = [];\n    var radioStyles = {\n      display: \"none\",\n      position: \"absolute\",\n      marginLeft: -9999\n    };\n\n    var starStyles = function starStyles(i, value) {\n      var _props6 = _this2.props,\n          starColor = _props6.starColor,\n          emptyStarColor = _props6.emptyStarColor,\n          editing = _props6.editing;\n      return {\n        float: \"right\",\n        cursor: editing ? \"pointer\" : \"default\",\n        color: value >= i ? starColor : emptyStarColor\n      };\n    };\n\n    var labelClass = function labelClass(i) {\n      return \"dv-star-rating-star \" + (value >= i ? \"dv-star-rating-full-star\" : \"dv-star-rating-empty-star\");\n    };\n\n    var _loop = function _loop(i) {\n      var id = name + \"_\" + i;\n      var starInput = React.createElement(\"input\", {\n        key: \"input_\" + id,\n        id: id,\n        style: radioStyles,\n        className: \"dv-star-rating-input\",\n        type: \"radio\",\n        name: name,\n        value: i,\n        checked: value === i,\n        onChange: _this2.onChange.bind(_this2, i, name)\n      });\n      var starLabel = React.createElement(\"label\", {\n        key: \"label_\" + id,\n        htmlFor: id,\n        style: starStyles(i, value),\n        className: labelClass(i),\n        onClick: function onClick(e) {\n          return _this2.onStarClick(i, value, name, e);\n        },\n        onMouseOver: function onMouseOver(e) {\n          return _this2.onStarHover(i, value, name, e);\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          return _this2.onStarHoverOut(i, value, name, e);\n        }\n      }, _this2.renderIcon(i, value, name, id));\n      stars.push(starInput);\n      stars.push(starLabel);\n    };\n\n    for (var i = starCount; i > 0; i--) {\n      _loop(i);\n    }\n\n    return stars.length ? stars : null;\n  };\n\n  RatingComponent.prototype.renderIcon = function renderIcon(index, value, name, id) {\n    var _props7 = this.props,\n        renderStarIcon = _props7.renderStarIcon,\n        renderStarIconHalf = _props7.renderStarIconHalf;\n    var isRenderingHalfStar = typeof renderStarIconHalf === \"function\" && Math.ceil(value) === index && value % 1 !== 0;\n    var isRenderingStar = typeof renderStarIcon === \"function\";\n\n    var renderBlackStar = function renderBlackStar() {\n      return React.createElement(\"i\", {\n        key: \"icon_\" + id,\n        style: {\n          fontStyle: \"normal\"\n        }\n      }, \"\\u2605\");\n    };\n\n    return isRenderingHalfStar ? renderStarIconHalf(index, value, name, id) : isRenderingStar ? renderStarIcon(index, value, name, id) : renderBlackStar();\n  };\n\n  RatingComponent.prototype.render = function render() {\n    var _props8 = this.props,\n        editing = _props8.editing,\n        className = _props8.className;\n    var styles = {\n      display: \"inline-block\",\n      position: \"relative\"\n    };\n    var classes = cx(\"dv-star-rating\", {\n      \"dv-star-rating-non-editable\": !editing\n    }, className);\n    return React.createElement(\"div\", {\n      style: styles,\n      className: classes\n    }, this.renderStars());\n  };\n\n  return RatingComponent;\n}(Component), _class.defaultProps = {\n  starCount: config.defaultStarCount,\n  editing: true,\n  starColor: config.gold,\n  emptyStarColor: config.charcoal\n}, _temp);\nRatingComponent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  editing: PropTypes.bool,\n  starCount: PropTypes.number,\n  starColor: PropTypes.string,\n  onStarClick: PropTypes.func,\n  onStarHover: PropTypes.func,\n  onStarHoverOut: PropTypes.func,\n  renderStarIcon: PropTypes.func,\n  renderStarIconHalf: PropTypes.func\n} : {};\nexport default RatingComponent;","map":null,"metadata":{},"sourceType":"module"}